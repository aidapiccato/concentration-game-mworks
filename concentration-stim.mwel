%include 'concentration-io'

%define n_cards_max = 16
%define n_images = 16

group 'Stimulus variables' {
    var card_index (scope = local; default_value = 0)
    var image_index (scope = local; default_value = 0)
    var br = 0.5
    var bg = 0.5
    var bb = 0.5
    var stim_size = 4
    var x_offset = 0
    var y_offset = 0
    var stim_dist = 2
}

%define display_images ()
    for_each_image {
        list {
            live_queue_stimulus (card_image_stims[image_index])
        }
    }
%end

%define for_each_card ()
    range_replicator (
        variable = card_index
        from = 0
        to = n_cards_max - 1
        step = 1
    )
%end

%define for_each_image ()
    range_replicator (
        variable = image_index
        from = 0
        to = n_images - 1
        step = 1
    )
%end


%define card_x_index_f (index) index % grid_dims[1]
%define card_y_index_f (index) floor(index / grid_dims[1]) * -1 // multiply by -1 so that lower-index rows will be on the top

%define card_x_index = ${card_index} % grid_dims[1]
%define card_y_index = floor(${card_index} / grid_dims[1]) * -1 // multiply by -1 so that lower-index rows will be on the top

%define x_offset = (grid_dims[1]/2  - 0.5) * stim_size + (grid_dims[1]/2 - 0.5) * stim_dist
%define y_offset = (grid_dims[0]/2 - 0.5)  * stim_size + (grid_dims[0]/2 - 0.5) * stim_dist

%define card_x_pos_f (index)  (card_x_index_f (index)) * (stim_size) + (card_x_index_f (index)) * (stim_dist) - x_offset
%define card_y_pos_f (index)  (card_y_index_f (index)) * (stim_size) + (card_y_index_f (index)) * (stim_dist) + y_offset

%define card_x_pos =  (card_x_index) * (stim_size) + (card_x_index) * (stim_dist) // - x_offset
%define card_y_pos =  (card_y_index) * (stim_size) + (card_y_index) * (stim_dist) // + y_offset

%define image_x_pos = card_x_pos_f (inv_grid[${image_index}])
%define image_y_pos = card_y_pos_f (inv_grid[${image_index}])

%define image_visible = inv_grid[${image_index}] != -1

stimulus_group card_image_stims {
    for_each_image {
         image_file 'img_stim_${image_index}' (
                path = "/Users/aidapiccato/PyCharmProjects/concentration/concentration-game-mworks/images/${image_index}.jpg"
                x_size = stim_size
                x_position = image_x_pos
                y_position = image_y_pos
                alpha_multiplier = image_visible
         )
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////// Target declarations
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


%define target_color = 0.25 - (sync >= FLIP_CARD_A and sync < FEEDBACK) * 0.1

%define is_card_b_and_vis (index)  (card_b == index and sync >= FLIP_CARD_B)
%define is_card_a_and_vis (index)  (card_a == index and sync >= FLIP_CARD_A)
%define target_visible (index) index < (n_pairs * 2) and !(feedback * flipped[index]) and !(is_card_a_and_vis (index) or is_card_b_and_vis (index)) // and sync < BLOCK_END

%define target (x_position, y_position, trigger_flag, index)
    fixation_point (
        color = target_color, target_color, target_color
        x_size = stim_size
        x_position = x_position
        y_position = y_position
        trigger_width = stim_size
        trigger_watch_x = pointer_x
        trigger_watch_y = pointer_y
        trigger_flag = trigger_flag
        alpha_multiplier = target_visible (index)
    )
%end

group 'Trigger flag variables' {
    var trigger_flag0 = 0
    var trigger_flag1 = 0
    var trigger_flag2 = 0
    var trigger_flag3 = 0
    var trigger_flag4 = 0
    var trigger_flag5 = 0
    var trigger_flag6 = 0
    var trigger_flag7 = 0
    var trigger_flag8 = 0
    var trigger_flag9 = 0
    var trigger_flag10 = 0
    var trigger_flag11 = 0
    var trigger_flag12 = 0
    var trigger_flag13 = 0
    var trigger_flag14 = 0
    var trigger_flag15 = 0
}
var trigger_flags = [trigger_flag0, trigger_flag1, trigger_flag2, trigger_flag3, trigger_flag4, trigger_flag5,
    trigger_flag6, trigger_flag7, trigger_flag8, trigger_flag9, trigger_flag10,
    trigger_flag11, trigger_flag12, trigger_flag13, trigger_flag14, trigger_flag15]

%define read_card_selection ()
    card_b = 0 * trigger_flag0 + 1 * trigger_flag1 + 2 * trigger_flag2 + 3 * trigger_flag3 + 4 * trigger_flag4 + 5 * trigger_flag5 + 6 * trigger_flag6 + 7 * trigger_flag7 + 8 * trigger_flag8 + 9 * trigger_flag9 + 10 * trigger_flag10 + 11 * trigger_flag11 + 12 * trigger_flag12 + 13 * trigger_flag13 + 14 * trigger_flag14 + 15 * trigger_flag15
%end

%define card_selected = (sync >= FLIP_CARD_A) * (mouse_down) * (trigger_flag0 + trigger_flag1 + trigger_flag2 + trigger_flag3 + trigger_flag4 + trigger_flag5 + trigger_flag6 + trigger_flag7 + trigger_flag8 + trigger_flag9 + trigger_flag10 +  trigger_flag11 + trigger_flag12 + trigger_flag13 + trigger_flag14 + trigger_flag15)


target target0 (x_position = card_x_pos_f (0); y_position = card_y_pos_f (0); trigger_flag = trigger_flag0; index = 0)
target target1 (x_position = card_x_pos_f (1); y_position = card_y_pos_f (1); trigger_flag = trigger_flag1; index = 1)
target target2 (x_position = card_x_pos_f (2); y_position = card_y_pos_f (2); trigger_flag = trigger_flag2; index = 2)
target target3 (x_position = card_x_pos_f (3); y_position = card_y_pos_f (3); trigger_flag = trigger_flag3; index = 3)
target target4 (x_position = card_x_pos_f (4); y_position = card_y_pos_f (4); trigger_flag = trigger_flag4; index = 4)
target target5 (x_position = card_x_pos_f (5); y_position = card_y_pos_f (5); trigger_flag = trigger_flag5; index = 5)
target target6 (x_position = card_x_pos_f (6); y_position = card_y_pos_f (6); trigger_flag = trigger_flag6; index = 6)
target target7 (x_position = card_x_pos_f (7); y_position = card_y_pos_f (7); trigger_flag = trigger_flag7; index = 7)
target target8 (x_position = card_x_pos_f (8); y_position = card_y_pos_f (8); trigger_flag = trigger_flag8; index = 8)
target target9 (x_position = card_x_pos_f (9); y_position = card_y_pos_f (9); trigger_flag = trigger_flag9; index = 9)
target target10 (x_position = card_x_pos_f (10); y_position = card_y_pos_f (10); trigger_flag = trigger_flag10; index = 10)
target target11 (x_position = card_x_pos_f (11); y_position = card_y_pos_f (11); trigger_flag = trigger_flag11; index = 11)
target target12 (x_position = card_x_pos_f (12); y_position = card_y_pos_f (12); trigger_flag = trigger_flag12; index = 12)
target target13 (x_position = card_x_pos_f (13); y_position = card_y_pos_f (13); trigger_flag = trigger_flag13; index = 13)
target target14 (x_position = card_x_pos_f (14); y_position = card_y_pos_f (14); trigger_flag = trigger_flag14; index = 14)
target target15 (x_position = card_x_pos_f (15); y_position = card_y_pos_f (15); trigger_flag = trigger_flag15; index = 15)

%define display_targets ()
    live_queue_stimulus (target0)
    live_queue_stimulus (target1)
    live_queue_stimulus (target2)
    live_queue_stimulus (target3)
    live_queue_stimulus (target4)
    live_queue_stimulus (target5)
    live_queue_stimulus (target6)
    live_queue_stimulus (target7)
    live_queue_stimulus (target8)
    live_queue_stimulus (target9)
    live_queue_stimulus (target10)
    live_queue_stimulus (target11)
    live_queue_stimulus (target12)
    live_queue_stimulus (target13)
    live_queue_stimulus (target14)
    live_queue_stimulus (target15)
%end
