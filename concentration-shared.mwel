////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// variable groups
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var mouse = 0
var touch = 0

group 'Configuration variables' {
    var n_pairs = 8
    var grid_dims = [2, 2]
    var grid = [0, 0, 0, 0]
    var inv_grid = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    var flipped = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    var n_success = 0
    var n_ignore = 0
    var n_failure = 0
    var feedback = 1
    var n_trials = 0
    var trials = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
}

var sync = 0


group 'Sync variables' {
    var ITI = 1
    var TRIAL_INIT = 2
    var FLIP_CARD_A = 3
    var FLIP_CARD_B = 4
    var FEEDBACK = 5
    var TRIAL_END = 6
    var BLOCK_BREAK = 7
}

group 'Trial variables' {
    var card_a = 0
    var card_b = 0
    var success = 0
    var failure = 0
    var ignore = 0
}
group 'Timer duration variables' {
    var choice_dur = 4s
    var feedback_dur = 500ms
    var iti_dur = 500ms
    var block_dur = 30s
}

group 'Python variables' {
    var py_n_pairs = 0
    var py_grid_dims = [0, 0]
    var py_feedback = 0
    var py_grid = [0, 0, 0, 0]
    var py_inv_grid = [0, 0, 0, 0]
    var py_card_a = 0
    var py_trials = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// experiment level macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

%define n_cycles = 4 // number of times all cards in each config are cycled through
%define n_configs = 4 // number of different configuration sizes
%define n_config_repeats = 8 // number of times a configuration size is repeated
%define n_blocks = n_config_repeats * n_configs
%define n_cards_max = 25

%define n_images = grid_dims[0] * grid_dims[1]
%define n_images_pairs = n_images - (n_images % 2)
%define n_trials_max = n_cycles * n_cards_max // maximum number of possible trials
%define n_trials_total = n_cycles * n_images_pairs  // number of trials for current block

var block_index = -1
var trial_index = -1
var trial_in_block_index = -1
selection selection_trial_index (
    values = 0:n_trials_max
    selection = sequential_ascending
    advance_on_accept = NO
    autoreset = NO
)

var subject_id = 0

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// includes
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

%include 'concentration-stim'

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// update macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
%define update_block_meta ()
   block_index = block_index + 1
   run_python_string(get_block_metaparameters())
   n_pairs = py_n_pairs
   grid = py_grid
   inv_grid = py_inv_grid
   grid_dims = py_grid_dims
%end
*/
%define reset_block_vars ()
    flipped = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    n_success = 0
    n_failure = 0
    n_ignore = 0
    reset_selection (selection_trial_index)
    trial_in_block_index = -1
%end

%define reset_trial_vars ()
    success = 0
    failure = 0
    ignore = 1
    card_b = 0
%end

/*
%define update_trial_meta ()
    trial_index = selection_trial_index
    run_python_string(get_trial_metaparameters())
    card_a = py_card_a
%end
*/


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// evaluation macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

%define mark_as_flipped ()
    flipped[card_a] = 1
    flipped[card_b] = 1
%end

%define evaluate ()
    ignore = ignore or card_a == card_b
    success = grid[card_b] == grid[card_a] * !ignore
    failure = !success * !ignore
    ignore = ignore
%end

